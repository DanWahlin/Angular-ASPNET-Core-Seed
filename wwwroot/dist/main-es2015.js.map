{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/ensureModuleLoadedOnceGuard.ts","./src/app/core/services/data.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', redirectTo: '/home' },\n    { path: 'home', component: HomeComponent },\n    { path: '**', redirectTo: '/home' } \n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n    static components = [ HomeComponent ];\n}","import { Component } from '@angular/core';\n\n@Component({ \n  selector: 'app-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n  \n  constructor() {\n\n  }\n  \n}","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  imports:      [ BrowserModule, AppRoutingModule, CoreModule ],\n  declarations: [ AppComponent, AppRoutingModule.components ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { EnsureModuleLoadedOnceGuard } from './ensureModuleLoadedOnceGuard';\n\n@NgModule({\n    imports: [ CommonModule, HttpClientModule ]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    //Ensure that CoreModule is only loaded into AppModule\n\n    //Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n    constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n        super(parentModule);\n    }\n}","export class EnsureModuleLoadedOnceGuard {\n\n    constructor(targetModule: any) {\n        if (targetModule) {\n            throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n    url = '/api/messages';\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getMessage() : Observable<string> {\r\n        return this.http.get<string>(this.url)\r\n            .pipe(\r\n                map(res => res['data']),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        console.error('Server error:', error);\r\n        if (error.error instanceof Error) {\r\n            const errMessage = error.error.message;\r\n            return Observable.throw(errMessage);\r\n        }\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../core/services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    message: string;\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getMessage().subscribe((message: string) => {\r\n            this.message = message;\r\n        })\r\n    }\r\n}","<h1>{{ message }}</h1>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}