{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/ensureModuleLoadedOnceGuard.ts","webpack:///src/app/core/services/data.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","components","forRoot","imports","AppComponent","selector","template","AppModule","declarations","bootstrap","CoreModule","parentModule","EnsureModuleLoadedOnceGuard","targetModule","constructor","name","DataService","http","url","get","pipe","res","handleError","error","console","errMessage","message","providedIn","HomeComponent","dataService","getMessage","subscribe","templateUrl","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACnB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,MAAvB;AAA+BC,gBAAU,EAAE;AAA3C,KADmB,EAEnB;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAFmB,EAGnB;AAAEH,UAAI,EAAE,IAAR;AAAcE,gBAAU,EAAE;AAA1B,KAHmB,CAAvB;;QAUaE,gB;;;;AACF,qBAAAC,UAAA,GAAa,CAAE,kEAAF,CAAb;;YADED;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHhB,CAAC,6DAAaE,OAAb,CAAqBP,MAArB,CAAD,CAGgB,EAFd,4DAEc;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFd,4DAEc;AAAA,O;AAFF,K;;;;;sEAEdA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACNG,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBP,MAArB,CAAD,CADH;AAENF,iBAAO,EAAE,CAAE,4DAAF;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaW,Y,GAEX,wBAAc;AAAA;AAEb,K;;;uBAJUA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;AAHrB;;;;;;;;;sEAGSA,Y,EAAY;cANxB,uDAMwB;eANd;AACTC,kBAAQ,EAAE,UADD;AAETC,kBAAQ;AAFC,S;AAMc,Q;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,S;;;;;YAAAA,S;AAAS,kBAFJ,2DAEI;;;;yBAATA,S;AAAS,O;AAAA,gBAJN,CAAE,uEAAF,EAAiB,oEAAjB,EAAmC,4DAAnC,CAIM;;;;0HAATA,S,EAAS;AAAA,uBAHJ,2DAGI,EAHU,kEAGV;AAHU,kBADd,uEACc,EADC,oEACD,EADmB,4DACnB;AAGV,O;AAJuC,K;;;;;sEAIhDA,S,EAAS;cALrB,sDAKqB;eALZ;AACRJ,iBAAO,EAAO,CAAE,uEAAF,EAAiB,oEAAjB,EAAmC,4DAAnC,CADN;AAERK,sBAAY,EAAE,CAAE,2DAAF,EAAgB,qEAAiBP,UAAjC,CAFN;AAGRQ,mBAAS,EAAK,CAAE,2DAAF;AAHN,S;AAKY,Q;;;;;;;;;;;;;;;;;;ACZtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,U;;;;;AAET;AACA,0BAAqCC,YAArC,EAA+D;AAAA;;AAAA,iCACrDA,YADqD;AAE9D;;;MAL2B,wF;;;YAAnBD;;;;yBAAAA,U,EAAU,uDAGgCA,UAHhC,EAG0C,EAH1C,C;AAG0C,O;AAAA,gBALpD,CAAE,4DAAF,EAAgB,qEAAhB,CAKoD;;;;0HAHpDA,U,EAAU;AAAA,kBAFR,4DAEQ,EAFM,qEAEN;AAAA,O;AAFsB,K;;;;;sEAEhCA,U,EAAU;cAHtB,sDAGsB;eAHb;AACNP,iBAAO,EAAE,CAAE,4DAAF,EAAgB,qEAAhB;AADH,S;AAGa,Q;;gBAGgCO,U;AAAU;kBAA/C;AAA+C,a;kBAAnC;WAAmC;;;;;;;;;;;;;;;;;;;;ACZjE;AAAA;;;AAAA;AAAA;AAAA;;QAAaE,2B,GAET,qCAAYC,YAAZ,EAA+B;AAAA;;AAC3B,UAAIA,YAAJ,EAAkB;AACd,cAAM,IAAIxB,KAAJ,WAAawB,YAAY,CAACC,WAAb,CAAyBC,IAAtC,yEAAN;AACH;AACJ,K;;;;;;;;;;;;;;;;;ACNL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,W;AAET,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADpB,aAAAC,GAAA,GAAM,eAAN;AACyC;;;;qCAE5B;AACT,iBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAsB,KAAKD,GAA3B,EACFE,IADE,CAEC,2DAAI,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAAC,MAAD,CAAP;AAAA,WAAP,CAFD,EAGC,kEAAW,KAAKC,WAAhB,CAHD,CAAP;AAKH;;;oCAEmBC,K,EAA0B;AAC1CC,iBAAO,CAACD,KAAR,CAAc,eAAd,EAA+BA,KAA/B;;AACA,cAAIA,KAAK,CAACA,KAAN,YAAuBlC,KAA3B,EAAkC;AAC9B,gBAAMoC,UAAU,GAAGF,KAAK,CAACA,KAAN,CAAYG,OAA/B;AACA,mBAAO,yDAAiBD,UAAjB,CAAP;AACH;;AACD,iBAAO,yDAAiBF,KAAK,IAAI,cAA1B,CAAP;AACH;;;;;;;uBAnBQP,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFR;;;;;sEAEHA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACRW,oBAAU,EAAE;AADJ,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,a;AAIT,6BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEtC;AAAA;;AACP,eAAKA,WAAL,CAAiBC,UAAjB,GAA8BC,SAA9B,CAAwC,UAACL,OAAD,EAAqB;AACzD,iBAAI,CAACA,OAAL,GAAeA,OAAf;AACH,WAFD;AAGH;;;;;;;uBAVQE,a,EAAa,wI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACR1B;;AAAI;;AAAa;;;;AAAb;;AAAA;;;;;;;;sEDQSA,a,EAAa;cAJzB,uDAIyB;eAJf;AACPvB,kBAAQ,EAAE,UADH;AAEP2B,qBAAW,EAAE;AAFN,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIZ,OAAO,CAACD,KAAR,CAAca,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', redirectTo: '/home' },\n    { path: 'home', component: HomeComponent },\n    { path: '**', redirectTo: '/home' } \n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n    static components = [ HomeComponent ];\n}","import { Component } from '@angular/core';\n\n@Component({ \n  selector: 'app-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n  \n  constructor() {\n\n  }\n  \n}","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  imports:      [ BrowserModule, AppRoutingModule, CoreModule ],\n  declarations: [ AppComponent, AppRoutingModule.components ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { EnsureModuleLoadedOnceGuard } from './ensureModuleLoadedOnceGuard';\n\n@NgModule({\n    imports: [ CommonModule, HttpClientModule ]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    //Ensure that CoreModule is only loaded into AppModule\n\n    //Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n    constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n        super(parentModule);\n    }\n}","export class EnsureModuleLoadedOnceGuard {\n\n    constructor(targetModule: any) {\n        if (targetModule) {\n            throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n    url = '/api/messages';\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getMessage() : Observable<string> {\r\n        return this.http.get<string>(this.url)\r\n            .pipe(\r\n                map(res => res['data']),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        console.error('Server error:', error);\r\n        if (error.error instanceof Error) {\r\n            const errMessage = error.error.message;\r\n            return Observable.throw(errMessage);\r\n        }\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../core/services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    message: string;\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getMessage().subscribe((message: string) => {\r\n            this.message = message;\r\n        })\r\n    }\r\n}","<h1>{{ message }}</h1>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}